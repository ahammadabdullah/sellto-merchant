generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model WaitList {
  id        String   @id @unique @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
}

model Merchant {
  id        String   @id @unique @default(cuid())
  name      String
  email     String   @unique
  shopName  String   @unique
  password  String
  createdAt DateTime @default(now())
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String   @default("merchant")
  status    String   @default("pending")
  Order     Order[]
  shop      Shop[]
}

model Shop {
  id          String     @id @default(uuid())
  name        String     @unique
  image       String?
  subdomain   String     @unique
  subTitle    String?
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      Int
  categories  Category[]
  products    Product[]
  user        User       @relation(fields: [userId], references: [id])
  theme       Json?
}

model Product {
  id           Int      @id @default(autoincrement())
  product_name String
  price        Float
  image        String?
  shopId       String
  stock        Int      @default(0)
  type         String
  createdAt    DateTime @default(now())
  status       String   @default("active")
  updatedAt    DateTime @updatedAt
  order        Order[]
  shop         Shop     @relation(fields: [shopId], references: [id])
}

model Category {
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        Int      @id @default(autoincrement())
  shopId    String
  shop      Shop     @relation(fields: [shopId], references: [id])
}

model Order {
  id            Int      @id @default(autoincrement())
  userId        Int
  customer_name String
  revenue       Float
  productId     Int
  quantity      Int
  shopId        String
  status        String   @default("pending")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  product       Product  @relation(fields: [productId], references: [id])
  user          User     @relation(fields: [userId], references: [id])
}
